---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/auth/login":
    post:
      summary: Creates a session
      tags:
      - Authentication
      parameters: []
      responses:
        '200':
          description: session created
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  refresh_token:
                    type: string
                required:
                - access_token
                - refresh_token
        '401':
          description: invalid credentials
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: object
                    additionalProperties: false
                    properties:
                      status:
                        type: string
                      code:
                        type: integer
                      message:
                        type: string
                      details:
                        type: object
                        nullable: true
                    required:
                    - status
                    - code
                    - message
                    - details
                required:
                - error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                session:
                  type: object
                  properties:
                    email:
                      type: string
                      example: user@example.com
                    password:
                      type: string
                      example: password123
                  required:
                  - email
                  - password
  "/api/v1/auth/refresh":
    post:
      summary: Refresh the access token
      tags:
      - Authentication
      security:
      - bearerAuth: []
      responses:
        '200':
          description: access token refreshed
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                required:
                - access_token
        '401':
          description: expired token
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: object
                    additionalProperties: false
                    properties:
                      status:
                        type: string
                      code:
                        type: integer
                      message:
                        type: string
                      details:
                        type: object
                        nullable: true
                    required:
                    - status
                    - code
                    - message
                    - details
                required:
                - error
  "/api/v1/organization/companies/{company_id}/clients":
    post:
      summary: Creates a client for a company
      tags:
      - Clients
      security:
      - bearerAuth: []
      parameters:
      - name: company_id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: client created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/client"
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error"
        '404':
          description: company not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error"
        '422':
          description: client is invalid
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                registration_number:
                  type: string
                email:
                  type: string
                phone:
                  type: string
                address_street:
                  type: string
                address_city:
                  type: string
                address_zipcode:
                  type: string
              required:
              - name
              - registration_number
              - email
              - phone
              - address_street
              - address_city
              - address_zipcode
        required: true
    get:
      summary: Lists clients for a company
      tags:
      - Clients
      security:
      - bearerAuth: []
      parameters:
      - name: company_id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: clients found
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/client"
        '404':
          description: company not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error"
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error"
  "/api/v1/organization/companies":
    get:
      summary: Lists user companies
      tags:
      - Companies
      security:
      - bearerAuth: []
      responses:
        '200':
          description: successfully lists user's companies
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    registration_number:
                      type: string
                    email:
                      type: string
                    phone:
                      type: string
                    address_city:
                      type: string
                    address_street:
                      type: string
                    address_zipcode:
                      type: string
                  required:
                  - id
                  - name
                  - registration_number
                  - email
                  - phone
                  - address_city
                  - address_street
                  - address_zipcode
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: object
                    additionalProperties: false
                    properties:
                      status:
                        type: string
                      code:
                        type: integer
                      message:
                        type: string
                      details:
                        type: object
                        nullable: true
                    required:
                    - status
                    - code
                    - message
                    - details
                required:
                - error
  "/api/v1/organization/companies/{id}":
    get:
      summary: Shows a specific company
      tags:
      - Companies
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: successfully shows the company
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  registration_number:
                    type: string
                  email:
                    type: string
                  phone:
                    type: string
                  address_city:
                    type: string
                  address_street:
                    type: string
                  address_zipcode:
                    type: string
                required:
                - id
                - name
                - registration_number
                - email
                - phone
                - address_city
                - address_street
                - address_zipcode
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: object
                    additionalProperties: false
                    properties:
                      status:
                        type: string
                      code:
                        type: integer
                      message:
                        type: string
                      details:
                        type: object
                        nullable: true
                    required:
                    - status
                    - code
                    - message
                    - details
                required:
                - error
        '404':
          description: not found
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: object
                    additionalProperties: false
                    properties:
                      status:
                        type: string
                      code:
                        type: integer
                      message:
                        type: string
                      details:
                        type: object
                        nullable: true
                    required:
                    - status
                    - code
                    - message
                    - details
                required:
                - error
  "/api/v1/organization/companies/{company_id}/projects":
    post:
      summary: Creates a new project and its descendants
      tags:
      - Projects
      security:
      - bearerAuth: []
      parameters:
      - name: company_id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: project created
          content:
            application/json:
              schema:
                type: object
                required:
                - id
                - name
                - client_id
                - versions
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
                    nullable: true
                  client_id:
                    type: integer
                  versions:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Organization::ProjectDtoProjectVersionDto"
        '404':
          description: not found
        '401':
          description: not authorised
        '422':
          description: unprocessable entity
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - name
              - client_id
              - retention_guarantee_rate
              - items
              properties:
                name:
                  type: string
                description:
                  type: string
                  nullable: true
                client_id:
                  type: integer
                retention_guarantee_rate:
                  type: integer
                items:
                  oneOf:
                  - type: array
                    items:
                      "$ref": "#/components/schemas/Organization::CreateProjecItemDto"
                  - type: array
                    items:
                      "$ref": "#/components/schemas/Organization::CreateProjectItemGroupDto"
    get:
      summary: List all the company's project
      tags:
      - Projects
      security:
      - bearerAuth: []
      parameters:
      - name: company_id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: list company's projects
          content:
            application/json:
              schema:
                type: object
                required:
                - results
                properties:
                  results:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Organization::ProjectIndexResponseProjectDto"
        '401':
          description: not authorised
        '404':
          description: not found
  "/api/v1/organization/companies/{company_id}/projects/{id}":
    get:
      summary: Show the project details
      tags:
      - Projects
      security:
      - bearerAuth: []
      parameters:
      - name: company_id
        in: path
        required: true
        schema:
          type: integer
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: list company's projects
          content:
            application/json:
              schema:
                type: object
                required:
                - result
                properties:
                  result:
                    "$ref": "#/components/schemas/Organization::ProjectShowResponseProjectDto"
        '401':
          description: not authorised
        '404':
          description: not found
components:
  schemas:
    client:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        registration_number:
          type: string
        email:
          type: string
        phone:
          type: string
        address_city:
          type: string
        address_street:
          type: string
        address_zipcode:
          type: string
      required:
      - id
      - name
      - registration_number
      - email
      - phone
      - address_city
      - address_street
      - address_zipcode
    create_project_with_item_groups:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        client_id:
          type: string
        project_versions_attributes:
          type: array
          items:
            type: object
            properties:
              retention_guarantee_rate:
                type: integer
              item_groups_attributes:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    description:
                      type: string
                    position:
                      type: integer
                    items_attributes:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          description:
                            type: string
                          position:
                            type: integer
                          quantity:
                            type: integer
                          unit_price_cents:
                            type: integer
                          unit:
                            type: string
                        required:
                        - name
                        - position
                        - quantity
                        - unit_price_cents
                        - unit
                  required:
                  - name
                  - position
                  - items_attributes
            required:
            - retention_guarantee_rate
            - item_groups_attributes
      required:
      - name
      - project_versions_attributes
    create_project_with_items:
      type: object
      properties:
        name:
          type: string
        client_id:
          type: string
        description:
          type: string
        project_versions_attributes:
          type: array
          items:
            type: object
            properties:
              retention_guarantee_rate:
                type: integer
              items_attributes:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    description:
                      type: string
                    position:
                      type: integer
                    quantity:
                      type: integer
                    unit_price_cents:
                      type: integer
                    unit:
                      type: string
                  required:
                  - name
                  - position
                  - quantity
                  - unit_price_cents
                  - unit
            required:
            - retention_guarantee_rate
            - items_attributes
      required:
      - name
      - project_versions_attributes
    error:
      type: object
      additionalProperties: false
      properties:
        error:
          type: object
          additionalProperties: false
          properties:
            status:
              type: string
            code:
              type: integer
            message:
              type: string
            details:
              type: object
              nullable: true
          required:
          - status
          - code
          - message
          - details
      required:
      - error
    Organization::CreateProjecItemDto:
      type: object
      required:
      - name
      - position
      - unit
      - unit_price_cents
      - quantity
      properties:
        name:
          type: string
        description:
          type: string
          nullable: true
        position:
          type: integer
        unit:
          type: string
        unit_price_cents:
          type: integer
        quantity:
          type: integer
    Organization::CreateProjectItemGroupDto:
      type: object
      required:
      - name
      - position
      - items
      properties:
        name:
          type: string
        description:
          type: string
          nullable: true
        position:
          type: integer
        items:
          type: array
          items:
            "$ref": "#/components/schemas/Organization::CreateProjecItemDto"
    Organization::CreateProjectDto:
      type: object
      required:
      - name
      - client_id
      - retention_guarantee_rate
      - items
      properties:
        name:
          type: string
        description:
          type: string
          nullable: true
        client_id:
          type: integer
        retention_guarantee_rate:
          type: integer
        items:
          oneOf:
          - type: array
            items:
              "$ref": "#/components/schemas/Organization::CreateProjecItemDto"
          - type: array
            items:
              "$ref": "#/components/schemas/Organization::CreateProjectItemGroupDto"
    Organization::ProjectDtoItemDto:
      type: object
      required:
      - id
      - position
      - name
      - quantity
      - unit
      - unit_price_cents
      properties:
        id:
          type: integer
        position:
          type: integer
        name:
          type: string
        description:
          type: string
          nullable: true
        quantity:
          type: integer
        unit:
          type: string
        unit_price_cents:
          type: integer
    Organization::ProjectDtoItemGroupDto:
      type: object
      required:
      - id
      - name
      - position
      - items
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
          nullable: true
        position:
          type: integer
        items:
          type: array
          items:
            "$ref": "#/components/schemas/Organization::ProjectDtoItemDto"
    Organization::ProjectDtoProjectVersionDto:
      type: object
      required:
      - id
      - retention_rate_guarantee
      - number
      - items
      properties:
        id:
          type: integer
        retention_rate_guarantee:
          type: integer
        number:
          type: integer
        items:
          oneOf:
          - type: array
            items:
              "$ref": "#/components/schemas/Organization::ProjectDtoItemDto"
          - type: array
            items:
              "$ref": "#/components/schemas/Organization::ProjectDtoItemGroupDto"
    Organization::ProjectDto:
      type: object
      required:
      - id
      - name
      - client_id
      - versions
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
          nullable: true
        client_id:
          type: integer
        versions:
          type: array
          items:
            "$ref": "#/components/schemas/Organization::ProjectDtoProjectVersionDto"
    Organization::ProjectIndexResponseProjectClientDto:
      type: object
      required:
      - id
      - name
      properties:
        id:
          type: integer
        name:
          type: string
    Organization::ProjectIndexResponseProjectDto:
      type: object
      required:
      - id
      - name
      - client
      - status
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
          nullable: true
        client:
          "$ref": "#/components/schemas/Organization::ProjectIndexResponseProjectClientDto"
        status:
          type: string
          enum:
          - new
          - invoicing_in_progress
          - invoiced
          - canceled
    Organization::ProjectIndexResponseDto:
      type: object
      required:
      - results
      properties:
        results:
          type: array
          items:
            "$ref": "#/components/schemas/Organization::ProjectIndexResponseProjectDto"
    Organization::ProjectShowResponseProjectClientDto:
      type: object
      required:
      - id
      - name
      - email
      - phone
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        phone:
          type: string
    Organization::ProjectShowResponseProjectItemDto:
      type: object
      required:
      - id
      - position
      - name
      - quantity
      - unit
      - unit_price_cents
      properties:
        id:
          type: integer
        position:
          type: integer
        name:
          type: string
        description:
          type: string
          nullable: true
        quantity:
          type: integer
        unit:
          type: string
        unit_price_cents:
          type: integer
    Organization::ProjectShowResponseProjectItemGroupDto:
      type: object
      required:
      - id
      - position
      - name
      - grouped_items
      properties:
        id:
          type: integer
        position:
          type: integer
        name:
          type: string
        description:
          type: string
          nullable: true
        grouped_items:
          type: array
          items:
            "$ref": "#/components/schemas/Organization::ProjectShowResponseProjectItemDto"
    Organization::ProjectShowResponseProjectLastVersionDto:
      type: object
      required:
      - id
      - number
      - created_at
      - ungrouped_items
      - item_groups
      properties:
        id:
          type: integer
        number:
          type: integer
        created_at:
          type: timestamp
        ungrouped_items:
          type: array
          items:
            "$ref": "#/components/schemas/Organization::ProjectShowResponseProjectItemDto"
        item_groups:
          type: array
          items:
            "$ref": "#/components/schemas/Organization::ProjectShowResponseProjectItemGroupDto"
    Organization::ProjectShowResponseProjectDto:
      type: object
      required:
      - id
      - name
      - client
      - status
      - last_version
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
          nullable: true
        client:
          "$ref": "#/components/schemas/Organization::ProjectShowResponseProjectClientDto"
        status:
          type: string
          enum:
          - new
          - invoicing_in_progress
          - invoiced
          - canceled
        last_version:
          "$ref": "#/components/schemas/Organization::ProjectShowResponseProjectLastVersionDto"
    Organization::ProjectShowResponseDto:
      type: object
      required:
      - result
      properties:
        result:
          "$ref": "#/components/schemas/Organization::ProjectShowResponseProjectDto"
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
