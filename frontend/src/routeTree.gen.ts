/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as AuthLoginImport } from './routes/auth/login'
import { Route as AuthenticatedCompaniesCompanyIdImport } from './routes/_authenticated/companies/$companyId'
import { Route as AuthenticatedCompaniesCompanyIdIndexImport } from './routes/_authenticated/companies/$companyId/index'
import { Route as AuthenticatedCompaniesCompanyIdProjectsIndexImport } from './routes/_authenticated/companies/$companyId/projects/index'
import { Route as AuthenticatedCompaniesCompanyIdClientsIndexImport } from './routes/_authenticated/companies/$companyId/clients/index'
import { Route as AuthenticatedCompaniesCompanyIdProjectsNewImport } from './routes/_authenticated/companies/$companyId/projects/new'
import { Route as AuthenticatedCompaniesCompanyIdClientsNewImport } from './routes/_authenticated/companies/$companyId/clients/new'

// Create/Update Routes

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedCompaniesCompanyIdRoute =
  AuthenticatedCompaniesCompanyIdImport.update({
    id: '/companies/$companyId',
    path: '/companies/$companyId',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedCompaniesCompanyIdIndexRoute =
  AuthenticatedCompaniesCompanyIdIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedCompaniesCompanyIdRoute,
  } as any)

const AuthenticatedCompaniesCompanyIdProjectsIndexRoute =
  AuthenticatedCompaniesCompanyIdProjectsIndexImport.update({
    id: '/projects/',
    path: '/projects/',
    getParentRoute: () => AuthenticatedCompaniesCompanyIdRoute,
  } as any)

const AuthenticatedCompaniesCompanyIdClientsIndexRoute =
  AuthenticatedCompaniesCompanyIdClientsIndexImport.update({
    id: '/clients/',
    path: '/clients/',
    getParentRoute: () => AuthenticatedCompaniesCompanyIdRoute,
  } as any)

const AuthenticatedCompaniesCompanyIdProjectsNewRoute =
  AuthenticatedCompaniesCompanyIdProjectsNewImport.update({
    id: '/projects/new',
    path: '/projects/new',
    getParentRoute: () => AuthenticatedCompaniesCompanyIdRoute,
  } as any)

const AuthenticatedCompaniesCompanyIdClientsNewRoute =
  AuthenticatedCompaniesCompanyIdClientsNewImport.update({
    id: '/clients/new',
    path: '/clients/new',
    getParentRoute: () => AuthenticatedCompaniesCompanyIdRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/companies/$companyId': {
      id: '/_authenticated/companies/$companyId'
      path: '/companies/$companyId'
      fullPath: '/companies/$companyId'
      preLoaderRoute: typeof AuthenticatedCompaniesCompanyIdImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/companies/$companyId/': {
      id: '/_authenticated/companies/$companyId/'
      path: '/'
      fullPath: '/companies/$companyId/'
      preLoaderRoute: typeof AuthenticatedCompaniesCompanyIdIndexImport
      parentRoute: typeof AuthenticatedCompaniesCompanyIdImport
    }
    '/_authenticated/companies/$companyId/clients/new': {
      id: '/_authenticated/companies/$companyId/clients/new'
      path: '/clients/new'
      fullPath: '/companies/$companyId/clients/new'
      preLoaderRoute: typeof AuthenticatedCompaniesCompanyIdClientsNewImport
      parentRoute: typeof AuthenticatedCompaniesCompanyIdImport
    }
    '/_authenticated/companies/$companyId/projects/new': {
      id: '/_authenticated/companies/$companyId/projects/new'
      path: '/projects/new'
      fullPath: '/companies/$companyId/projects/new'
      preLoaderRoute: typeof AuthenticatedCompaniesCompanyIdProjectsNewImport
      parentRoute: typeof AuthenticatedCompaniesCompanyIdImport
    }
    '/_authenticated/companies/$companyId/clients/': {
      id: '/_authenticated/companies/$companyId/clients/'
      path: '/clients'
      fullPath: '/companies/$companyId/clients'
      preLoaderRoute: typeof AuthenticatedCompaniesCompanyIdClientsIndexImport
      parentRoute: typeof AuthenticatedCompaniesCompanyIdImport
    }
    '/_authenticated/companies/$companyId/projects/': {
      id: '/_authenticated/companies/$companyId/projects/'
      path: '/projects'
      fullPath: '/companies/$companyId/projects'
      preLoaderRoute: typeof AuthenticatedCompaniesCompanyIdProjectsIndexImport
      parentRoute: typeof AuthenticatedCompaniesCompanyIdImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedCompaniesCompanyIdRouteChildren {
  AuthenticatedCompaniesCompanyIdIndexRoute: typeof AuthenticatedCompaniesCompanyIdIndexRoute
  AuthenticatedCompaniesCompanyIdClientsNewRoute: typeof AuthenticatedCompaniesCompanyIdClientsNewRoute
  AuthenticatedCompaniesCompanyIdProjectsNewRoute: typeof AuthenticatedCompaniesCompanyIdProjectsNewRoute
  AuthenticatedCompaniesCompanyIdClientsIndexRoute: typeof AuthenticatedCompaniesCompanyIdClientsIndexRoute
  AuthenticatedCompaniesCompanyIdProjectsIndexRoute: typeof AuthenticatedCompaniesCompanyIdProjectsIndexRoute
}

const AuthenticatedCompaniesCompanyIdRouteChildren: AuthenticatedCompaniesCompanyIdRouteChildren =
  {
    AuthenticatedCompaniesCompanyIdIndexRoute:
      AuthenticatedCompaniesCompanyIdIndexRoute,
    AuthenticatedCompaniesCompanyIdClientsNewRoute:
      AuthenticatedCompaniesCompanyIdClientsNewRoute,
    AuthenticatedCompaniesCompanyIdProjectsNewRoute:
      AuthenticatedCompaniesCompanyIdProjectsNewRoute,
    AuthenticatedCompaniesCompanyIdClientsIndexRoute:
      AuthenticatedCompaniesCompanyIdClientsIndexRoute,
    AuthenticatedCompaniesCompanyIdProjectsIndexRoute:
      AuthenticatedCompaniesCompanyIdProjectsIndexRoute,
  }

const AuthenticatedCompaniesCompanyIdRouteWithChildren =
  AuthenticatedCompaniesCompanyIdRoute._addFileChildren(
    AuthenticatedCompaniesCompanyIdRouteChildren,
  )

interface AuthenticatedRouteChildren {
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedCompaniesCompanyIdRoute: typeof AuthenticatedCompaniesCompanyIdRouteWithChildren
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedCompaniesCompanyIdRoute:
    AuthenticatedCompaniesCompanyIdRouteWithChildren,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof AuthenticatedRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/': typeof AuthenticatedIndexRoute
  '/companies/$companyId': typeof AuthenticatedCompaniesCompanyIdRouteWithChildren
  '/companies/$companyId/': typeof AuthenticatedCompaniesCompanyIdIndexRoute
  '/companies/$companyId/clients/new': typeof AuthenticatedCompaniesCompanyIdClientsNewRoute
  '/companies/$companyId/projects/new': typeof AuthenticatedCompaniesCompanyIdProjectsNewRoute
  '/companies/$companyId/clients': typeof AuthenticatedCompaniesCompanyIdClientsIndexRoute
  '/companies/$companyId/projects': typeof AuthenticatedCompaniesCompanyIdProjectsIndexRoute
}

export interface FileRoutesByTo {
  '/auth/login': typeof AuthLoginRoute
  '/': typeof AuthenticatedIndexRoute
  '/companies/$companyId': typeof AuthenticatedCompaniesCompanyIdIndexRoute
  '/companies/$companyId/clients/new': typeof AuthenticatedCompaniesCompanyIdClientsNewRoute
  '/companies/$companyId/projects/new': typeof AuthenticatedCompaniesCompanyIdProjectsNewRoute
  '/companies/$companyId/clients': typeof AuthenticatedCompaniesCompanyIdClientsIndexRoute
  '/companies/$companyId/projects': typeof AuthenticatedCompaniesCompanyIdProjectsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/companies/$companyId': typeof AuthenticatedCompaniesCompanyIdRouteWithChildren
  '/_authenticated/companies/$companyId/': typeof AuthenticatedCompaniesCompanyIdIndexRoute
  '/_authenticated/companies/$companyId/clients/new': typeof AuthenticatedCompaniesCompanyIdClientsNewRoute
  '/_authenticated/companies/$companyId/projects/new': typeof AuthenticatedCompaniesCompanyIdProjectsNewRoute
  '/_authenticated/companies/$companyId/clients/': typeof AuthenticatedCompaniesCompanyIdClientsIndexRoute
  '/_authenticated/companies/$companyId/projects/': typeof AuthenticatedCompaniesCompanyIdProjectsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/auth/login'
    | '/'
    | '/companies/$companyId'
    | '/companies/$companyId/'
    | '/companies/$companyId/clients/new'
    | '/companies/$companyId/projects/new'
    | '/companies/$companyId/clients'
    | '/companies/$companyId/projects'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/auth/login'
    | '/'
    | '/companies/$companyId'
    | '/companies/$companyId/clients/new'
    | '/companies/$companyId/projects/new'
    | '/companies/$companyId/clients'
    | '/companies/$companyId/projects'
  id:
    | '__root__'
    | '/_authenticated'
    | '/auth/login'
    | '/_authenticated/'
    | '/_authenticated/companies/$companyId'
    | '/_authenticated/companies/$companyId/'
    | '/_authenticated/companies/$companyId/clients/new'
    | '/_authenticated/companies/$companyId/projects/new'
    | '/_authenticated/companies/$companyId/clients/'
    | '/_authenticated/companies/$companyId/projects/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  AuthLoginRoute: typeof AuthLoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  AuthLoginRoute: AuthLoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/auth/login"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/",
        "/_authenticated/companies/$companyId"
      ]
    },
    "/auth/login": {
      "filePath": "auth/login.tsx"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/companies/$companyId": {
      "filePath": "_authenticated/companies/$companyId.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/companies/$companyId/",
        "/_authenticated/companies/$companyId/clients/new",
        "/_authenticated/companies/$companyId/projects/new",
        "/_authenticated/companies/$companyId/clients/",
        "/_authenticated/companies/$companyId/projects/"
      ]
    },
    "/_authenticated/companies/$companyId/": {
      "filePath": "_authenticated/companies/$companyId/index.tsx",
      "parent": "/_authenticated/companies/$companyId"
    },
    "/_authenticated/companies/$companyId/clients/new": {
      "filePath": "_authenticated/companies/$companyId/clients/new.tsx",
      "parent": "/_authenticated/companies/$companyId"
    },
    "/_authenticated/companies/$companyId/projects/new": {
      "filePath": "_authenticated/companies/$companyId/projects/new.tsx",
      "parent": "/_authenticated/companies/$companyId"
    },
    "/_authenticated/companies/$companyId/clients/": {
      "filePath": "_authenticated/companies/$companyId/clients/index.tsx",
      "parent": "/_authenticated/companies/$companyId"
    },
    "/_authenticated/companies/$companyId/projects/": {
      "filePath": "_authenticated/companies/$companyId/projects/index.tsx",
      "parent": "/_authenticated/companies/$companyId"
    }
  }
}
ROUTE_MANIFEST_END */
