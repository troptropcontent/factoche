/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/v1/auth/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Creates a session */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        session?: {
                            /** @example user@example.com */
                            email: string;
                            /** @example password123 */
                            password: string;
                        };
                    };
                };
            };
            responses: {
                /** @description session created */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            access_token: string;
                            refresh_token: string;
                        };
                    };
                };
                /** @description invalid credentials */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                status: string;
                                code: number;
                                message: string;
                                details: Record<string, never>;
                            };
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/auth/refresh": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Refresh the access token */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description access token refreshed */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            access_token: string;
                        };
                    };
                };
                /** @description expired token */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                status: string;
                                code: number;
                                message: string;
                                details: Record<string, never>;
                            };
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/organization/companies/{company_id}/clients": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Lists clients for a company */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    company_id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description clients found */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["client"][];
                    };
                };
                /** @description unauthorised */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["error"];
                    };
                };
                /** @description company not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["error"];
                    };
                };
            };
        };
        put?: never;
        /** Creates a client for a company */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    company_id: number;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        name: string;
                        registration_number: string;
                        email: string;
                        phone: string;
                        address_street: string;
                        address_city: string;
                        address_zipcode: string;
                    };
                };
            };
            responses: {
                /** @description client created */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["client"];
                    };
                };
                /** @description user can not create a client within this company */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["error"];
                    };
                };
                /** @description forbiden */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description company not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["error"];
                    };
                };
                /** @description client is invalid */
                422: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["error"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/organization/clients/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Show client */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description client's details */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            result: components["schemas"]["Organization::Clients::ExtendedDto"];
                        };
                    };
                };
                /** @description forbiden */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["error"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/organization/companies": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Lists user companies */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description successfully lists user's companies */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: number;
                            name: string;
                            registration_number: string;
                            email: string;
                            phone: string;
                            address_city: string;
                            address_street: string;
                            address_zipcode: string;
                        }[];
                    };
                };
                /** @description forbidden */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                status: string;
                                code: number;
                                message: string;
                                details: Record<string, never>;
                            };
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/organization/companies/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Shows a specific company */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description successfully shows the company */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: number;
                            name: string;
                            registration_number: string;
                            email: string;
                            phone: string;
                            address_city: string;
                            address_street: string;
                            address_zipcode: string;
                        };
                    };
                };
                /** @description forbidden */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                status: string;
                                code: number;
                                message: string;
                                details: Record<string, never>;
                            };
                        };
                    };
                };
                /** @description not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                status: string;
                                code: number;
                                message: string;
                                details: Record<string, never>;
                            };
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/organization/companies/{company_id}/projects/{project_id}/completion_snapshots": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create a new completion snapshot on the project's last version */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    company_id: number;
                    project_id: number;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        description?: string | null;
                        completion_snapshot_items: components["schemas"]["Organization::CreateCompletionSnapshotItemDto"][];
                    };
                };
            };
            responses: {
                /** @description completion snapshot successfully created */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            result: components["schemas"]["Organization::CompletionSnapshots::ExtendedDto"];
                        };
                    };
                };
                /** @description unauthorised */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description forbiden */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description unprocessable entity */
                422: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/organization/completion_snapshots/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        /** Show completion snapshot details */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description show completion_snapshot */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            result: components["schemas"]["Organization::CompletionSnapshots::ExtendedDto"];
                        };
                    };
                };
                /** @description not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        /** Update completion snapshot */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        description?: string | null;
                        completion_snapshot_items: components["schemas"]["Organization::CompletionSnapshots::UpdatableCompletionSnapshotItem"][];
                    };
                };
            };
            responses: {
                /** @description updates completion snapshot */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            result: components["schemas"]["Organization::CompletionSnapshots::ExtendedDto"];
                        };
                    };
                };
                /** @description forbiden */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description unprocessable entity */
                422: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        post?: never;
        /** Delete completion snapshot */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description no content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description forbiden */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description unprocessable entity */
                422: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/organization/completion_snapshots/{id}/previous": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        /** Show previous completion snapshot details */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description show previous completion_snapshot */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            result?: components["schemas"]["Organization::CompletionSnapshots::ExtendedDto"];
                        };
                    };
                };
                /** @description not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/organization/completion_snapshots/{id}/publish": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Publish the completion snapshot */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description completion snapshot published */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            result: components["schemas"]["Organization::CompletionSnapshots::ExtendedDto"];
                        };
                    };
                };
                /** @description forbiden */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description unprocessable entity */
                422: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/organization/completion_snapshots/{id}/cancel": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Cancel the completion snapshot */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description completion snapshot cancelled */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            result: components["schemas"]["Organization::CompletionSnapshots::ExtendedDto"];
                        };
                    };
                };
                /** @description forbiden */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description unprocessable entity */
                422: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/organization/completion_snapshots": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List all project version completion snapshot */
        get: {
            parameters: {
                query?: {
                    filter?: {
                        company_id?: number | null;
                        project_id?: number | null;
                        project_version_id?: number | null;
                    };
                    query?: {
                        limit?: number | null;
                    };
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description list completion_snapshot */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            results: components["schemas"]["Organization::CompletionSnapshots::CompactDto"][];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/organization/project_versions/{project_version_id}/completion_snapshots/new_completion_snapshot_data": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                project_version_id: number;
            };
            cookie?: never;
        };
        /** Get the draft completion snapshot data */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    project_version_id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description draft completion snapshot */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            result: components["schemas"]["Organization::CompletionSnapshots::NewCompletionSnapshotDataDto::DraftCompletionSnapshot"];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/organization/companies/{company_id}/projects/{project_id}/versions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List all the project's versions */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    company_id: number;
                    project_id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description list company's projects */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            results: components["schemas"]["Organization::ProjectVersionIndexResponseProjectDto"][];
                        };
                    };
                };
                /** @description not authorised */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/organization/companies/{company_id}/projects/{project_id}/versions/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Show the project version details */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    company_id: number;
                    project_id: number;
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description show project version details */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            result: components["schemas"]["Organization::ProjectVersions::ExtendedDto"];
                        };
                    };
                };
                /** @description not authorised */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/organization/companies/{company_id}/projects": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List all the company's project */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    company_id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description list company's projects */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            results: components["schemas"]["Organization::Projects::CompactDto"][];
                        };
                    };
                };
                /** @description not authorised */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        /** Creates a new project and its descendants */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    company_id: number;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        name: string;
                        description?: string | null;
                        client_id: number;
                        retention_guarantee_rate: number;
                        items: components["schemas"]["Organization::CreateProjecItemDto"][] | components["schemas"]["Organization::CreateProjectItemGroupDto"][];
                    };
                };
            };
            responses: {
                /** @description project created */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: number;
                            name: string;
                            description?: string | null;
                            client_id: number;
                            versions: components["schemas"]["Organization::ProjectDtoProjectVersionDto"][];
                        };
                    };
                };
                /** @description not authorised */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description unprocessable entity */
                422: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["error"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/organization/companies/{company_id}/projects/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Show the project details */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    company_id: number;
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description list company's projects */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            result: components["schemas"]["Organization::ProjectShowResponseProjectDto"];
                        };
                    };
                };
                /** @description not authorised */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        client: {
            id: number;
            name: string;
            registration_number: string;
            email: string;
            phone: string;
            address_city: string;
            address_street: string;
            address_zipcode: string;
        };
        create_project_with_item_groups: {
            name: string;
            description?: string;
            client_id?: string;
            project_versions_attributes: {
                retention_guarantee_rate: number;
                item_groups_attributes: {
                    name: string;
                    description?: string;
                    position: number;
                    items_attributes: {
                        name: string;
                        description?: string;
                        position: number;
                        quantity: number;
                        unit_price_cents: number;
                        unit: string;
                    }[];
                }[];
            }[];
        };
        create_project_with_items: {
            name: string;
            client_id?: string;
            description?: string;
            project_versions_attributes: {
                retention_guarantee_rate: number;
                items_attributes: {
                    name: string;
                    description?: string;
                    position: number;
                    quantity: number;
                    unit_price_cents: number;
                    unit: string;
                }[];
            }[];
        };
        error: {
            error: {
                status: string;
                code: number;
                message: string;
                details: Record<string, never>;
            };
        };
        "Organization::Clients::ExtendedDto": {
            id: number;
            name: string;
            registration_number: string;
            email: string;
            phone: string;
            address_street: string;
            address_city: string;
            address_zipcode: string;
        };
        "Organization::Clients::ShowDto": {
            result: components["schemas"]["Organization::Clients::ExtendedDto"];
        };
        "Organization::CompletionSnapshotDtoItemDto": {
            /** Format: decimal */
            completion_percentage: string;
            item_id: number;
        };
        "Organization::CompletionSnapshotDto": {
            id: number;
            /** Format: date-time */
            created_at: string;
            project_version: components["schemas"]["Organization::ProjectVersions::CompactDto"];
            description?: string | null;
            /** @enum {string} */
            status: "draft" | "cancelled" | "published";
        };
        "Organization::ProjectVersions::CompactDto": {
            id: number;
            number: number;
            /** Format: date-time */
            created_at: string;
            retention_guarantee_rate: number;
            /** Format: decimal */
            total_amount: string;
        };
        "Organization::CompletionSnapshotIndexRequestDto": {
            company_id?: number | null;
            project_id?: number | null;
            project_version_id?: number | null;
        };
        "Organization::CompletionSnapshotIndexResponseDto": {
            results: components["schemas"]["Organization::CompletionSnapshotDto"][];
        };
        "Organization::CompletionSnapshotItems::ExtendedDto": {
            /** Format: decimal */
            completion_percentage: string;
            item_id: number;
        };
        "Organization::CompletionSnapshots::CompactDto": {
            id: number;
            description?: string | null;
            /** @enum {string} */
            status: "draft" | "cancelled" | "published";
            project_version: components["schemas"]["Organization::ProjectVersions::CompactDto"];
            /** Format: date-time */
            created_at: string;
        };
        "Organization::CompletionSnapshots::ExtendedDto": {
            id: number;
            /** @enum {string} */
            status: "draft" | "cancelled" | "published";
            project_version: components["schemas"]["Organization::ProjectVersions::ExtendedDto"];
            completion_snapshot_items: components["schemas"]["Organization::CompletionSnapshotItems::ExtendedDto"][];
            invoice: components["schemas"]["Organization::Invoices::ExtendedDto"];
            /** Format: date-time */
            created_at: string;
        };
        "Organization::ProjectVersions::ExtendedDto": {
            id: number;
            number: number;
            /** Format: date-time */
            created_at: string;
            retention_guarantee_rate: number;
            ungrouped_items: components["schemas"]["Organization::Items::ExtendedDto"][];
            item_groups: components["schemas"]["Organization::ItemGroups::ExtendedDto"][];
        };
        "Organization::Items::ExtendedDto": {
            id: number;
            original_item_uuid: string;
            position: number;
            name: string;
            description?: string | null;
            quantity: number;
            unit: string;
            unit_price_cents: number;
        };
        "Organization::ItemGroups::ExtendedDto": {
            id: number;
            position: number;
            name: string;
            description?: string | null;
            grouped_items: components["schemas"]["Organization::Items::ExtendedDto"][];
        };
        "Organization::Invoices::ExtendedDto::DocumentInfo": {
            number: string;
            /** Format: date-time */
            issue_date: string;
            /** Format: date-time */
            delivery_date: string;
            /** Format: date-time */
            due_date: string;
        };
        "Organization::Invoices::ExtendedDto::PaymentTerm": {
            days: number;
        };
        "Organization::Invoices::ExtendedDto::Address": {
            city: string;
            street: string;
            zip: string;
        };
        "Organization::Invoices::ExtendedDto::Seller": {
            name: string;
            address: components["schemas"]["Organization::Invoices::ExtendedDto::Address"];
            phone: string;
            siret: string;
            legal_form: string;
            /** Format: decimal */
            capital_amount: string;
            vat_number: string;
            rcs_city: string;
            rcs_number: string;
        };
        "Organization::Invoices::ExtendedDto::BillingAddress": {
            name: string;
            address: components["schemas"]["Organization::Invoices::ExtendedDto::Address"];
        };
        "Organization::Invoices::ExtendedDto::DeliveryAddress": {
            name: string;
            address: components["schemas"]["Organization::Invoices::ExtendedDto::Address"];
        };
        "Organization::Invoices::ExtendedDto::ProjectVersion": {
            /** Format: date-time */
            date: string;
            number: number;
        };
        "Organization::Invoices::ExtendedDto::ProjectContext": {
            name: string;
            version: components["schemas"]["Organization::Invoices::ExtendedDto::ProjectVersion"];
            /** Format: decimal */
            total_amount: string;
            /** Format: decimal */
            previously_billed_amount: string;
            /** Format: decimal */
            remaining_amount: string;
        };
        "Organization::Invoices::ExtendedDto::Item": {
            id: number;
            original_item_uuid: string;
            name: string;
            description?: string | null;
            item_group_id: number;
            quantity: number;
            unit: string;
            /** Format: decimal */
            unit_price_amount: string;
            /** Format: decimal */
            total_amount: string;
            /** Format: decimal */
            previously_invoiced_amount: string;
            /** Format: decimal */
            completion_percentage: string;
            /** Format: decimal */
            completion_amount: string;
            /** Format: decimal */
            invoice_amount: string;
        };
        "Organization::Invoices::ExtendedDto::ItemGroup": {
            id: number;
            name: string;
            position: number;
            description?: string | null;
        };
        "Organization::Invoices::ExtendedDto::Transaction": {
            /** Format: decimal */
            total_excl_tax_amount: string;
            /** Format: decimal */
            tax_rate: string;
            /** Format: decimal */
            tax_amount: string;
            /** Format: decimal */
            retention_guarantee_amount: string;
            /** Format: decimal */
            retention_guarantee_rate: string;
            items: components["schemas"]["Organization::Invoices::ExtendedDto::Item"][];
            item_groups: components["schemas"]["Organization::Invoices::ExtendedDto::ItemGroup"][];
            /** Format: decimal */
            invoice_total_amount: string;
        };
        "Organization::Invoices::ExtendedDto::Payload": {
            document_info: components["schemas"]["Organization::Invoices::ExtendedDto::DocumentInfo"];
            payment_term: components["schemas"]["Organization::Invoices::ExtendedDto::PaymentTerm"];
            seller: components["schemas"]["Organization::Invoices::ExtendedDto::Seller"];
            billing_address: components["schemas"]["Organization::Invoices::ExtendedDto::BillingAddress"];
            delivery_address: components["schemas"]["Organization::Invoices::ExtendedDto::DeliveryAddress"];
            project_context: components["schemas"]["Organization::Invoices::ExtendedDto::ProjectContext"];
            transaction: components["schemas"]["Organization::Invoices::ExtendedDto::Transaction"];
        };
        "Organization::Invoices::ExtendedDto": {
            pdf_url?: string | null;
            payload: components["schemas"]["Organization::Invoices::ExtendedDto::Payload"];
            /** @enum {string} */
            status: "draft" | "published" | "cancelled";
            credit_note?: components["schemas"]["Organization::CreditNotes::ExtendedDto"];
        };
        "Organization::CreditNotes::ExtendedDto::DocumentInfo": {
            number: string;
            /** Format: date-time */
            issue_date: string;
            /** Format: date-time */
            original_invoice_date: string;
            original_invoice_number: string;
        };
        "Organization::CreditNotes::ExtendedDto::Address": {
            city: string;
            street: string;
            zip: string;
        };
        "Organization::CreditNotes::ExtendedDto::Seller": {
            name: string;
            address: components["schemas"]["Organization::CreditNotes::ExtendedDto::Address"];
            phone: string;
            siret: string;
            legal_form: string;
            /** Format: decimal */
            capital_amount: string;
            vat_number: string;
            rcs_city: string;
            rcs_number: string;
        };
        "Organization::CreditNotes::ExtendedDto::BillingAddress": {
            name: string;
            address: components["schemas"]["Organization::CreditNotes::ExtendedDto::Address"];
        };
        "Organization::CreditNotes::ExtendedDto::ProjectVersion": {
            /** Format: date-time */
            date: string;
            number: number;
        };
        "Organization::CreditNotes::ExtendedDto::ProjectContext": {
            name: string;
            version: components["schemas"]["Organization::CreditNotes::ExtendedDto::ProjectVersion"];
            /** Format: decimal */
            total_amount: string;
            /** Format: decimal */
            previously_billed_amount: string;
            /** Format: decimal */
            remaining_amount: string;
        };
        "Organization::CreditNotes::ExtendedDto::Item": {
            id: number;
            original_item_uuid: string;
            name: string;
            description?: string | null;
            item_group_id: number;
            quantity: number;
            unit: string;
            /** Format: decimal */
            unit_price_amount: string;
            /** Format: decimal */
            credit_note_amount: string;
        };
        "Organization::CreditNotes::ExtendedDto::ItemGroup": {
            id: number;
            name: string;
            position: number;
            description?: string | null;
        };
        "Organization::CreditNotes::ExtendedDto::Transaction": {
            /** Format: decimal */
            total_excl_tax_amount: string;
            /** Format: decimal */
            tax_rate: string;
            /** Format: decimal */
            tax_amount: string;
            /** Format: decimal */
            retention_guarantee_amount: string;
            /** Format: decimal */
            retention_guarantee_rate: string;
            /** Format: decimal */
            total_incl_tax_amount: string;
            items: components["schemas"]["Organization::CreditNotes::ExtendedDto::Item"][];
            item_groups: components["schemas"]["Organization::CreditNotes::ExtendedDto::ItemGroup"][];
            /** Format: decimal */
            credit_note_total_amount: string;
        };
        "Organization::CreditNotes::ExtendedDto::Payload": {
            document_info: components["schemas"]["Organization::CreditNotes::ExtendedDto::DocumentInfo"];
            seller: components["schemas"]["Organization::CreditNotes::ExtendedDto::Seller"];
            billing_address: components["schemas"]["Organization::CreditNotes::ExtendedDto::BillingAddress"];
            project_context: components["schemas"]["Organization::CreditNotes::ExtendedDto::ProjectContext"];
            transaction: components["schemas"]["Organization::CreditNotes::ExtendedDto::Transaction"];
        };
        "Organization::CreditNotes::ExtendedDto": {
            pdf_url?: string | null;
            payload: components["schemas"]["Organization::CreditNotes::ExtendedDto::Payload"];
            /** @enum {string} */
            status: "draft" | "published";
        };
        "Organization::CompletionSnapshots::IndexDto": {
            results: components["schemas"]["Organization::CompletionSnapshots::CompactDto"][];
        };
        "Organization::CompletionSnapshots::NewCompletionSnapshotDataDto::DraftInvoice::ProjectVersion": {
            /** Format: date-time */
            date: string;
            number: number;
        };
        "Organization::CompletionSnapshots::NewCompletionSnapshotDataDto::DraftInvoice::ProjectContext": {
            name: string;
            version: components["schemas"]["Organization::CompletionSnapshots::NewCompletionSnapshotDataDto::DraftInvoice::ProjectVersion"];
            /** Format: decimal */
            total_amount: string;
            /** Format: decimal */
            previously_billed_amount: string;
            /** Format: decimal */
            remaining_amount: string;
        };
        "Organization::CompletionSnapshots::NewCompletionSnapshotDataDto::DraftInvoice::Item": {
            id: number;
            original_item_uuid: string;
            name: string;
            description?: string | null;
            item_group_id: number;
            quantity: number;
            unit: string;
            /** Format: decimal */
            unit_price_amount: string;
            /** Format: decimal */
            total_amount: string;
            /** Format: decimal */
            previously_invoiced_amount: string;
            /** Format: decimal */
            completion_percentage: string;
            /** Format: decimal */
            completion_amount: string;
            /** Format: decimal */
            invoice_amount: string;
        };
        "Organization::CompletionSnapshots::NewCompletionSnapshotDataDto::DraftInvoice::ItemGroup": {
            id: number;
            name: string;
            position: number;
            description?: string | null;
        };
        "Organization::CompletionSnapshots::NewCompletionSnapshotDataDto::DraftInvoice::Transaction": {
            /** Format: decimal */
            total_excl_tax_amount: string;
            /** Format: decimal */
            tax_rate: string;
            /** Format: decimal */
            tax_amount: string;
            /** Format: decimal */
            retention_guarantee_amount: string;
            /** Format: decimal */
            retention_guarantee_rate: string;
            items: components["schemas"]["Organization::CompletionSnapshots::NewCompletionSnapshotDataDto::DraftInvoice::Item"][];
            item_groups: components["schemas"]["Organization::CompletionSnapshots::NewCompletionSnapshotDataDto::DraftInvoice::ItemGroup"][];
            /** Format: decimal */
            invoice_total_amount: string;
        };
        "Organization::CompletionSnapshots::NewCompletionSnapshotDataDto::DraftInvoice::Payload": {
            project_context: components["schemas"]["Organization::CompletionSnapshots::NewCompletionSnapshotDataDto::DraftInvoice::ProjectContext"];
            transaction: components["schemas"]["Organization::CompletionSnapshots::NewCompletionSnapshotDataDto::DraftInvoice::Transaction"];
        };
        "Organization::CompletionSnapshots::NewCompletionSnapshotDataDto::DraftInvoice": {
            payload: components["schemas"]["Organization::CompletionSnapshots::NewCompletionSnapshotDataDto::DraftInvoice::Payload"];
        };
        "Organization::CompletionSnapshots::NewCompletionSnapshotDataDto::DraftCompletionSnapshot": {
            invoice: components["schemas"]["Organization::CompletionSnapshots::NewCompletionSnapshotDataDto::DraftInvoice"];
        };
        "Organization::CompletionSnapshots::NewCompletionSnapshotDataDto": {
            result: components["schemas"]["Organization::CompletionSnapshots::NewCompletionSnapshotDataDto::DraftCompletionSnapshot"];
        };
        "Organization::CompletionSnapshots::PreviousDto": {
            result?: components["schemas"]["Organization::CompletionSnapshots::ExtendedDto"];
        };
        "Organization::CompletionSnapshots::ShowDto": {
            result: components["schemas"]["Organization::CompletionSnapshots::ExtendedDto"];
        };
        "Organization::CompletionSnapshots::UpdatableCompletionSnapshotItem": {
            completion_percentage: string;
            item_id: number;
        };
        "Organization::CompletionSnapshots::UpdateDto": {
            description?: string | null;
            completion_snapshot_items: components["schemas"]["Organization::CompletionSnapshots::UpdatableCompletionSnapshotItem"][];
        };
        "Organization::CreateCompletionSnapshotItemDto": {
            completion_percentage: string;
            item_id: number;
        };
        "Organization::CreateCompletionSnapshotDto": {
            description?: string | null;
            completion_snapshot_items: components["schemas"]["Organization::CreateCompletionSnapshotItemDto"][];
        };
        "Organization::CreateProjecItemDto": {
            name: string;
            description?: string | null;
            position: number;
            unit: string;
            unit_price_cents: number;
            quantity: number;
        };
        "Organization::CreateProjectItemGroupDto": {
            name: string;
            description?: string | null;
            position: number;
            items: components["schemas"]["Organization::CreateProjecItemDto"][];
        };
        "Organization::CreateProjectDto": {
            name: string;
            description?: string | null;
            client_id: number;
            retention_guarantee_rate: number;
            items: components["schemas"]["Organization::CreateProjecItemDto"][] | components["schemas"]["Organization::CreateProjectItemGroupDto"][];
        };
        "Organization::ProjectDtoItemDto": {
            id: number;
            position: number;
            name: string;
            description?: string | null;
            quantity: number;
            unit: string;
            unit_price_cents: number;
        };
        "Organization::ProjectDtoItemGroupDto": {
            id: number;
            name: string;
            description?: string | null;
            position: number;
            items: components["schemas"]["Organization::ProjectDtoItemDto"][];
        };
        "Organization::ProjectDtoProjectVersionDto": {
            id: number;
            retention_rate_guarantee: number;
            number: number;
            items: components["schemas"]["Organization::ProjectDtoItemDto"][] | components["schemas"]["Organization::ProjectDtoItemGroupDto"][];
        };
        "Organization::ProjectDto": {
            id: number;
            name: string;
            description?: string | null;
            client_id: number;
            versions: components["schemas"]["Organization::ProjectDtoProjectVersionDto"][];
        };
        "Organization::ProjectIndexResponseProjectClientDto": {
            id: number;
            name: string;
        };
        "Organization::ProjectIndexResponseProjectDto": {
            id: number;
            name: string;
            description?: string | null;
            client: components["schemas"]["Organization::ProjectIndexResponseProjectClientDto"];
            last_version: components["schemas"]["Organization::ProjectVersions::CompactDto"];
            /** @enum {string} */
            status: "new" | "invoicing_in_progress" | "invoiced" | "canceled";
        };
        "Organization::ProjectIndexResponseDto": {
            results: components["schemas"]["Organization::ProjectIndexResponseProjectDto"][];
        };
        "Organization::ProjectShowResponseProjectClientDto": {
            id: number;
            name: string;
            email: string;
            phone: string;
        };
        "Organization::ProjectShowResponseProjectItemDto": {
            id: number;
            original_item_uuid: string;
            position: number;
            name: string;
            description?: string | null;
            quantity: number;
            unit: string;
            unit_price_cents: number;
        };
        "Organization::ProjectShowResponseProjectItemGroupDto": {
            id: number;
            position: number;
            name: string;
            description?: string | null;
            grouped_items: components["schemas"]["Organization::ProjectShowResponseProjectItemDto"][];
        };
        "Organization::ProjectShowResponseProjectLastVersionDto": {
            id: number;
            number: number;
            /** Format: decimal */
            total_amount: string;
            /** Format: date-time */
            created_at: string;
            completion_snapshots: components["schemas"]["Organization::CompletionSnapshots::CompactDto"][];
            ungrouped_items: components["schemas"]["Organization::ProjectShowResponseProjectItemDto"][];
            item_groups: components["schemas"]["Organization::ProjectShowResponseProjectItemGroupDto"][];
        };
        "Organization::ProjectShowResponseProjectDto": {
            id: number;
            name: string;
            description?: string | null;
            client: components["schemas"]["Organization::ProjectShowResponseProjectClientDto"];
            /** @enum {string} */
            status: "new" | "invoicing_in_progress" | "invoiced" | "canceled";
            /** Format: decimal */
            invoiced_amount: string;
            last_version: components["schemas"]["Organization::ProjectShowResponseProjectLastVersionDto"];
        };
        "Organization::ProjectShowResponseDto": {
            result: components["schemas"]["Organization::ProjectShowResponseProjectDto"];
        };
        "Organization::ProjectVersionIndexResponseProjectDto": {
            id: number;
            number: number;
            /** Format: date-time */
            created_at: string;
        };
        "Organization::ProjectVersionIndexResponseDto": {
            results: components["schemas"]["Organization::ProjectVersionIndexResponseProjectDto"][];
        };
        "Organization::ProjectVersionShowProjectVersionItemDto": {
            id: number;
            position: number;
            name: string;
            description?: string | null;
            quantity: number;
            unit: string;
            unit_price_cents: number;
        };
        "Organization::ProjectVersionShowProjectVersionItemGroupDto": {
            id: number;
            position: number;
            name: string;
            description?: string | null;
            grouped_items: components["schemas"]["Organization::ProjectVersionShowProjectVersionItemDto"][];
        };
        "Organization::ProjectVersionShowResponseProjectVersionDto": {
            id: number;
            number: number;
            is_last_version: boolean;
            /** Format: date-time */
            created_at: string;
            retention_guarantee_rate: number;
            ungrouped_items: components["schemas"]["Organization::ProjectVersionShowProjectVersionItemDto"][];
            item_groups: components["schemas"]["Organization::ProjectVersionShowProjectVersionItemGroupDto"][];
        };
        "Organization::ProjectVersionShowResponseDto": {
            result: components["schemas"]["Organization::ProjectVersionShowResponseProjectVersionDto"];
        };
        "Organization::ProjectVersions::ShowDto": {
            result: components["schemas"]["Organization::ProjectVersions::ExtendedDto"];
        };
        "Organization::Projects::CompactDto": {
            id: number;
            name: string;
            description?: string | null;
            client: components["schemas"]["Organization::Clients::ExtendedDto"];
            /** Format: decimal */
            invoiced_amount: string;
            last_version: components["schemas"]["Organization::ProjectVersions::CompactDto"];
            /** @enum {string} */
            status: "new" | "invoicing_in_progress" | "invoiced" | "canceled";
        };
        "Organization::Projects::IndexDto": {
            results: components["schemas"]["Organization::Projects::CompactDto"][];
        };
        "Organization::ShowCompletionSnapshotResponseDto": {
            result: components["schemas"]["Organization::CompletionSnapshots::ExtendedDto"];
        };
        QueryParamsDto: {
            limit?: number | null;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
